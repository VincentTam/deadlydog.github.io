name: Mark Rohren
date: '2018-12-22 15:49:48'
url: ''
message: "I wrote the following one-line batch program to convert a PowerShell script to a .bat file.  Copy it to a \"p2b.bat\" file and enter \"p2b \" (the .ps1 extension is optional); the output file will be the same prefix with a .bat extension.  The output batch program can take parameters or arguments, but is limited to just under 8192 characters.  I even used the script to modify itself!\r\n\r\n@echo off &amp; powershell -command \"&amp;{$dq=[char]34;$hash=[char]35;$pct=[char]37;$amp=[char]38;$sq=[char]39;$sc=[char]59;$lt=[char]60;$gt=[char]62;$bt=[char]96;$strLen=0;$inComment=0;$inSq=0;$inDq=0;$inQuotes=0;$inParens=0;$inSquares=0;$script=$args[0];if($script.length -lt 1){$script=Read-Host \\\"Enter name of script\\\";$pause=1}if(-not($script-match(\\\"\\.\\\"))){$script+=\\\".ps1\\\"}$batch=$script-replace \\\"\\..*\\\", \\\"\\\";$batch=$batch+\\\".bat\\\";$lines=Get-Content $script;$str=\\\"\\\";foreach($line in $lines){if($line.length -gt 0){if($line-match \\\"$lt#\\\"){if($line-match \\\"#$gt\\\"){$line=$line-replace \\\"(.*)$lt#.*#$gt(.*)\\\", '$1$2'}else {$line=$line-replace \\\"$lt#.$\\\", \\\"\\\";$inComment=1}}elseif($line-match \\\"#$gt\\\"){$line=$line-replace \\\"(.*)#$gt(.*)\\\", '$2';$inComment=0}if($inComment -eq 0){$line=$line-replace \\\"$pct\\\", \\\"$pct$pct\\\";$esc=0;$outLine=\\\"\\\";$len=$line.length;$i=0;$prev='';while($i -lt $len){$char=$line[$i++];if($i -eq $len){$next=''}else {$next=$line[$i]}if($esc -eq 0){if($inQuotes -eq 1){if(($char -eq $lt)-or($char -eq $gt)-or($char -eq $amp)){$outLine+='^'}if($inSq -eq 1){if($char -eq $sq){$inSq=0}}elseif($inDq -eq 1){if($char -eq $bt){if($next -eq $dq){$char=$dq;$inDq=0}elseif($next -eq ':'){continue}}elseif($char -eq $dq){$inDq=0}}if(($inSq -eq 0)-and($inDq -eq 0)){$inQuotes=0}}else {if($char -eq $hash){break}elseif($char -eq '('){$inParens+=1}elseif($char -eq ')'){$inParens -=1}elseif($char -eq '['){$inSquares+=1}elseif($char -eq ']'){$inSquares -=1}elseif($char -eq $sq){$inSq=1;$inQuotes=1}elseif($char -eq $dq){$inDq=1;$inQuotes=1}elseif($char -eq ' '){if(($prev -like '[=)+*]')-or ($next -like '[=(+*]')){$char=''}}}}if($char -eq $dq){$outLine+='\\'}if($char -eq '\\\\'){$esc=1}else {$esc=0}$outLine+=$char;$prev=$char}$outLine=$outLine.trim();if($strLen -gt 5000 -and -not $outLine-match(\\\"^else\\\")-and -not $outLine-match(\\\"^]Param\\\")-and -not $outLine-match(\\\"^catch\\\")-and -not $outLine-match(\\\"^finally\\\")){$strLen=0;$outLine=\\\"$dq;$dq$outLine\\\"}if(($inParens -lt 1 -and $inSquares -lt 1 -and $inQuotes -eq 0)-or($outLine-match(\\\"$bt$\\\"))){if($outLine.length -gt 1){$outLine+=\\\";\\\"}}$str+=$outLine;$strLen+=$outLine.length}}}$str=$str-replace \\\"$bt;\\\", \\\"\\\";$str=$str-replace \\\",$sc\\\", \\\",\\\";$str=$str-replace \\\"$sc{\\\", \\\"{\\\";$str=$str-replace \\\"{$sc\\\", \\\"{\\\";$str=$str-replace \\\"$sc}\\\", \\\"}\\\";$str=$str-replace \\\"]($sc)[Pp]aram\\\", \\\"]param\\\";$str=$str-replace \\\"($sc)[Cc]atch\\\", \\\"catch\\\";$str=$str-replace \\\"($sc)[Ff]inally\\\", \\\"finally\\\";$str=$str-replace \\\"($sc)else\\\", \\\"else\\\";$str=\\\"@\\\"+\\\"echo off $amp powershell -command \\\"\\\"$amp{\\\"+$str+\\\"} %%*\\\"\\\"\\\";$str | Set-Content \\\"$batch\\\";Write-Host \\\"output batch file: $batch\\\";if($pause -eq 1){$pause=Read-Host \\\"Press any key to continue\\\"}} %*\""
email: 4b6bba4a31d68a325c97e0322ac31817
