name: Zak
date: '2015-05-09 04:32:16'
url: 'http://www.inforhino.co.uk'
message: "Firstly, this is a great article so please don't take offence at what I am about to write. My problem is that configuration in .Net is an afterthought, neglected and a disaster. This example is great in that you could use it to define a custom and meaningful pointer to better configuration mechanisms.\r\n\r\nAll that configuration should be is pointers to the locations of configuration. This is synonymous with having a database connection string that points to data (which is itself, a form of configuration). \r\n\r\nA huge amount of code is needed just to produce something as simple as create a configuration section in a .net config file. I admire this article for it's effort but would you be happy creating multiple classes just to set up some configuration sections? For me, the best strategy for managing configuration is to use something like ConfigR. you can declare objects inside text files that are direct mirrors of the objects you intend to use. \r\n\r\nThere is poorly formed attribute based xml in this example, another bane of .Net configuration, so it is hard to understand the structure of the intended configuration - let alone the intended use of the configuration so whilst we may know that something is a connection string, connection string to what? Quickly, there ends up being redundant configuration that serves no purpose.\r\n\r\nThe final nail in the coffin of .Net configuration is that once you have gone through the process of implementing configurationElement and configurationSections, carefully hard coding the keys to the configuration values, inside your code, somewhere you have to map the configuration items to arguments supplied to various classes etc.\r\n\r\nI am completing an MVC project and I will publish an alternative on something like CodeProject on how configuration should be done but please try and think about how configuration should be implemented."
email: e5058c600540618fb2b6e2dc4fc0c1e1
