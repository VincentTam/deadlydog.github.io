name: SeanD
date: '2014-04-02 10:18:15'
url: ''
message: "Get-content was the trick. In case anyone wants to know -  Here is the complete code that will allow you to pick a file and then read whats in it. Mine here reads it then pings the list\r\n\r\n$filePath = Read-OpenFileDialog -WindowTitle \"Select Text File Example\" -InitialDirectory 'C:\\' -Filter \"Text files (*.txt)|*.txt\"\r\nif (![string]::IsNullOrEmpty($filePath)) { Write-Host \"You selected the file: $filePath\" }\r\nelse { \"You did not select a file.\" }\r\n\r\n$Output2 = \"c:\\PSexport\\PingOldPCs5.csv\"\r\n\r\n# Show an Open File Dialog and return the file selected by the user.\r\nfunction Read-OpenFileDialog([string]$WindowTitle, [string]$InitialDirectory, [string]$Filter = \"All files (*.*)|*.*\", [switch]$AllowMultiSelect)\r\n{ \r\n    Add-Type -AssemblyName System.Windows.Forms\r\n    $openFileDialog = New-Object System.Windows.Forms.OpenFileDialog\r\n    $openFileDialog.Title = $WindowTitle\r\n    if (![string]::IsNullOrWhiteSpace($InitialDirectory)) { $openFileDialog.InitialDirectory = $InitialDirectory }\r\n    $openFileDialog.Filter = $Filter\r\n    if ($AllowMultiSelect) { $openFileDialog.MultiSelect = $true }\r\n    # openFileDialog.ShowHelp = $true    # Without this line the ShowDialog() function may hang depending on system configuration and running from console vs. ISE.\r\n    $openFileDialog.ShowDialog() &gt; $null\r\n    if ($AllowMultiSelect) { return $openFileDialog.Filenames } else { return $openFileDialog.Filename }\r\n} # End Function\r\n\r\n$responses = @()\r\n\r\nForEach ($path in $filePath) {\r\n    \r\n    ForEach ($computer in (Get-Content $path)) {\r\n    \r\n        $responses += GWMI win32_pingstatus -filter (\"address='\"+ $computer +\"'\") -computername .\r\n    }\r\n\r\n}\r\n\r\n$responses |\r\nSelect-Object ProtocolAddress,address,responsetime,statuscode | export-csv $Output2 -NoTypeInformation"
email: a2d4772476e8230be0e1e56bc470b635
